rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admins can read all user data (for admin dashboard)
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users can read and write their own registrations subcollection
    match /users/{userId}/registrations/{registrationId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own certificates subcollection
    match /users/{userId}/certificates/{certificateId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Events are publicly readable (for homepage and browsing)
    match /events/{eventId} {
      allow read: if true;  // Anyone can read events
      // Allow authenticated users to update attendee count during registration/unregistration
      allow update: if request.auth != null && 
        (resource == null || 
         resource.data.createdBy == request.auth.uid ||
         request.resource.data.attendeeCount != null);
      // Allow event creation by authenticated users
      allow create: if request.auth != null;
      // Allow deletion only by event creator
      allow delete: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;
    }
    
    // Users can read and write their own event registrations
    match /events/{eventId}/registrations/{registrationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == registrationId;
    }
    
    // Users can read and write their own event attendance
    match /events/{eventId}/attendance/{attendanceId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == attendanceId;
    }
    
    // Event attendees subcollection - users can read all attendees and write their own
    match /events/{eventId}/attendees/{attendeeId} {
      allow read: if request.auth != null;  // Anyone authenticated can read attendees
      // Allow users to create their own attendee records
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      // Allow users to update/delete their own attendee records
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Admins can do everything
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Attendees collection - FIXED: users can write their own registrations
    match /attendees/{attendeeId} {
      allow read: if request.auth != null;
      // Allow users to create their own attendee records
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      // Allow users to update/delete their own attendee records
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Admins can do everything
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Rooms - readable by all authenticated users, writable by admins
    match /rooms/{roomId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Certificates - users can read their own
    match /certificates/{certificateId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
